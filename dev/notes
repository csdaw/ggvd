#### Input data - general ####

- Using ggplot2, therefore ultimately the input must be a dataframe/tibble.
- To have all the necessary info present (and available to the user to manipulate),
  the input might have to be a tibble which allows for list columns.
- BUT (see determine-input-df-structure) I think if I make the dataframe the
  same number of rows as the number of segments this will be the best option?

Remember:

n_segments = 2^n_circles - 1
n_circles = sqrt(n_segments + 1)


geom_venn shouldn't take in x0, y0, a, b, phi, rather should have pre-set
ellipse values (x0, y0, a,b,phi etc.) for 2,3,4 way venn that are determined
by n_row of input data.

geom_venn should essentially comprised of:

1. take input df (df_complete2) and determine n_sets and calculate x0, y0 etc.
2. geom_ellipse for circle outlines (and optionally fills?), input would be
x0, y0, a, b, phi, etc. each row = 1 circle, na.rm = TRUE?
3. geom_ellipse_clip? geom_ellipse_seg? geom_clip_ellipse? geom_eclipse!! haha
geom_ellipse_fragment,

for circle segments, input would be a bit tricky, each row = 1 segment,

To be truly generalisable, needs to handle no overlap or not having all possible
overlaps at once, and still being able to have colour and grouping and
whatever. Or perhaps, some error handling e.g. stop if ellipses don't overlap
or stop if polyclip doesn't return something resonable.



e.g. for 2way venn

set   x0    y0  ...     seg     seg_colour (could rename to colour in processing?)
A     1     1   ...     A       red
B     2     1   ...     B       purple
NA    NA    NA  ...     AB      green

or last row could just be repeated x0, y0 and use unique() in setup_data

set   x0    y0  ...     seg     seg_colour (could rename to colour in processing?)
A     1     1   ...     A       red
B     2     1   ...     B       purple
B     2     1   ...     AB      green

then calculate circles, then clip circles, then apply colour etc. etc.

4. geom_text for set labels
5. geom_text for seg labels
6. geom_text for seg percentages?




#### Dependencies ####

Imports:
- tibble (maybe not?)
- ggplot2
- polyclip

Suggests:
- eulerr
- testthat
- vdiffr?


#### Input data - specific ####

- From my previous notes, the minimal info (i.e. columns) necessary to make the
most basic Venn is: set names (in a character column named set), number of observations in
each set (in a numeric column named n), number of observations in each segment
(in a list column named count).

Need to double check the correct terminology on these things.


#### Functions ####

## prepare_venn()

- Name subject to change
- I think geom_venn and geom_euler should have identical input (even though a
lot of the columns necessary for geom_euler are redundant for geom_venn)
- I think this function may do most of the heavy lifting!

## prepare_euler()

- NAme subject to change
- Perhaps the functions used to prepare the data for a venn vs an euler should
  be different but ultimately output a similar df which is used
- This function should do most of the heavy lifting

## geom_venn() and GeomVenn

- Standard venn, circles not scaled
- Two types (need to decide on proper names): discrete (each set has a different colour)
  and continuous (each segment has a different colour, can scale to count)
- Ultimately a wrapper function/Geom akin to https://github.com/tidyverse/ggplot2/blob/main/R/geom-pointrange.r
  around GeomEllipse, GeomPolygon (if type = continuous) and GeomText x 2/3 (set labels and count labels and percent?)

## geom_euler() and GeomEuler

- Scaled circles
- Wrapper function/Geom

## GeomEllipse

- Make copies of the stuff from ggforce so you don't have to import it
- Aesthetics:
  - h (aka. x0, circle centre x) (required)
  - k (aka. y0, circle centre y) (required)
  - a (circle major thingy) (required)
  - b (circle minor thingy) (required)
  - phi (aka. angle, circle rotation?) (required)
  - fill (unless type = continuous, in which case GeomPolygon hs fill and this fill should be NA)
  - colour
  - alpha
  - size (or whatever the new linewidth aesthetic is..)
  - linetype
  - group? (maybe dunno???)
- Computed variables
  - x
  - y

## GeomPolygon

- After using polyclip, can just leverage GeomPolygon
- Also for optional 5 way venn (although should probably just use upset plot)
- Aesthetics:
  - x (required)
  - y (required)
  - alpha
  - colour (this should always be NA I think, therefore don't make available for aesthetic mapping?)
  - fill
  - group? (see docs)
  - linetype (this should be always be NA I think, therefore don't make available for aesthetic mapping?)
  - size (this should be always be NA I think, therefore don't make available for aesthetic mapping?)

## GeomText

- Maybe can use this optionally? Like outlier.shape https://github.com/tidyverse/ggplot2/blob/main/R/geom-boxplot.r
- Will need it at most 3 times perhaps?:
 1. Set labels
 2. Seg counts
 3. Seg percentages

 Maybe somehow implement rectangle behind text? https://github.com/gaospecial/ggVennDiagram

- Aesthetics:
  - x (required)
  - y (required)
  - label (required)
  - alpha
  - angle
  - colour
  - family
  - fontface
  - group
  - hjust
  - lineheight
  - size
  - vjust

